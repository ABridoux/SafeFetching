{"sections":[],"metadata":{"externalID":"s:12SafeFetching22FetchableManagedObjectyycfm","modules":[{"name":"SafeFetching"}],"roleHeading":"Macro","title":"FetchableManagedObject()","role":"symbol","fragments":[{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"kind":"identifier","text":"FetchableManagedObject"},{"kind":"text","text":"()"}],"symbolKind":"macro"},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"text":"@attached","kind":"attribute"},{"text":"(member, names: arbitrary) ","kind":"text"},{"text":"@attached","kind":"attribute"},{"text":"(extension, conformances: ","kind":"text"},{"preciseIdentifier":"s:12SafeFetching9FetchableP","text":"Fetchable","kind":"typeIdentifier","identifier":"doc:\/\/SafeFetching\/documentation\/SafeFetching\/Fetchable"},{"text":") ","kind":"text"},{"text":"macro","kind":"keyword"},{"text":" ","kind":"text"},{"text":"FetchableManagedObject","kind":"identifier"},{"text":"()","kind":"text"}],"languages":["swift"]}]},{"content":[{"level":2,"type":"heading","text":"Overview","anchor":"overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Add "},{"type":"codeVoice","code":"FetchableMembers"},{"type":"text","text":" and "},{"type":"codeVoice","code":"fetchableMembers"},{"type":"text","text":" to a "},{"type":"codeVoice","code":"NSManagedObject"},{"type":"text","text":" to make it conform to "},{"type":"codeVoice","code":"Fetchable"},{"type":"text","text":"."}]},{"level":2,"type":"heading","text":"Usage","anchor":"Usage"},{"type":"paragraph","inlineContent":[{"text":"This macro adds conformance to ","type":"text"},{"type":"reference","identifier":"doc:\/\/SafeFetching\/documentation\/SafeFetching\/Fetchable","isActive":true},{"text":" and expand the managed object class it is attached to by providing fetchable members.","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"Given the following ","type":"text"},{"code":"User","type":"codeVoice"},{"text":" class,","type":"text"}]},{"syntax":"swift","type":"codeListing","code":["@FetchableManagedObject","final class User: NSManagedObject {","    @NSManaged var score = 0.0","    @NSManaged var name: String? = \"\"","}"]},{"type":"paragraph","inlineContent":[{"text":"the macro expansion will be the following.","type":"text"}]},{"syntax":"swift","type":"codeListing","code":["final class User: NSManagedObject {","    @NSManaged var score = 0.0","    @NSManaged var name: String? = \"\"","","    static var fetchableMembers: FetchableMembers { FetchableMembers() }","","    struct FetchableMembers: Sendable {","        let score = FetchableMember<User, Double>(identifier: \"score\")","        let name = FetchableMember<User, String?>(identifier: \"name\")","    }","}"]},{"level":3,"type":"heading","text":"Additional Members","anchor":"Additional-Members"},{"type":"paragraph","inlineContent":[{"text":"If needed, ","type":"text"},{"type":"codeVoice","code":"User.FetchableMembers"},{"text":" can still be extended to specify additional members that the macro would not catch, such as when the member is defined in a parent class.","type":"text"}]},{"syntax":"swift","type":"codeListing","code":["extension User.FetchableMembers {","    let additionalMember = FetchableMember<User, Bool>(identifier: \"additionalMember\")","}"]},{"level":3,"type":"heading","text":"Ignore Members","anchor":"Ignore-Members"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Using "},{"type":"reference","identifier":"doc:\/\/SafeFetching\/documentation\/SafeFetching\/FetchingIgnored()","isActive":true},{"type":"text","text":", some members (either attributes or relationships) can be excluded from the "},{"type":"codeVoice","code":"FetchableMembers"},{"type":"text","text":" generation."}]},{"syntax":"swift","type":"codeListing","code":["@FetchableManagedObject","final class User: NSManagedObject {","    @NSManaged var score = 0.0","","    @FetchingIgnored","    @NSManaged var name: String? = \"\"","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"will be expanded as followed."}]},{"syntax":"swift","type":"codeListing","code":["final class User: NSManagedObject {","    @NSManaged var score = 0.0","    @NSManaged var name: String? = \"\"","","    static var fetchableMembers: FetchableMembers { FetchableMembers() }","","    struct FetchableMembers: Sendable {","        let score = FetchableMember<User, Double>(identifier: \"score\")","    }","}"]}],"kind":"content"}],"variants":[{"paths":["\/documentation\/safefetching\/fetchablemanagedobject()"],"traits":[{"interfaceLanguage":"swift"}]}],"seeAlsoSections":[{"identifiers":["doc:\/\/SafeFetching\/documentation\/SafeFetching\/Fetchable","doc:\/\/SafeFetching\/documentation\/SafeFetching\/FetchingIgnored()"],"title":"Conform to `Fetchable`","generated":true,"anchor":"Conform-to-Fetchable"}],"hierarchy":{"paths":[["doc:\/\/SafeFetching\/documentation\/SafeFetching"]]},"kind":"symbol","schemaVersion":{"minor":3,"patch":0,"major":0},"abstract":[{"text":"Add ","type":"text"},{"code":"FetchableMembers","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"fetchableMembers","type":"codeVoice"},{"text":" to a ","type":"text"},{"code":"NSManagedObject","type":"codeVoice"},{"text":" to make it conform to ","type":"text"},{"code":"Fetchable","type":"codeVoice"},{"text":".","type":"text"}],"identifier":{"url":"doc:\/\/SafeFetching\/documentation\/SafeFetching\/FetchableManagedObject()","interfaceLanguage":"swift"},"references":{"doc://SafeFetching/documentation/SafeFetching/FetchableManagedObject()":{"fragments":[{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"kind":"identifier","text":"FetchableManagedObject"},{"kind":"text","text":"()"}],"abstract":[{"type":"text","text":"Add "},{"type":"codeVoice","code":"FetchableMembers"},{"type":"text","text":" and "},{"type":"codeVoice","code":"fetchableMembers"},{"type":"text","text":" to a "},{"type":"codeVoice","code":"NSManagedObject"},{"type":"text","text":" to make it conform to "},{"type":"codeVoice","code":"Fetchable"},{"type":"text","text":"."}],"type":"topic","kind":"symbol","role":"symbol","identifier":"doc:\/\/SafeFetching\/documentation\/SafeFetching\/FetchableManagedObject()","title":"FetchableManagedObject()","url":"\/documentation\/safefetching\/fetchablemanagedobject()"},"doc://SafeFetching/documentation/SafeFetching/Fetchable":{"title":"Fetchable","identifier":"doc:\/\/SafeFetching\/documentation\/SafeFetching\/Fetchable","type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Fetchable","kind":"identifier"}],"role":"symbol","kind":"symbol","navigatorTitle":[{"text":"Fetchable","kind":"identifier"}],"abstract":[{"type":"text","text":"Implemented by a "},{"type":"codeVoice","code":"NSManagedObject"},{"type":"text","text":" to offer fetching using SafeFetching API."}],"url":"\/documentation\/safefetching\/fetchable"},"doc://SafeFetching/documentation/SafeFetching":{"role":"collection","identifier":"doc:\/\/SafeFetching\/documentation\/SafeFetching","kind":"symbol","abstract":[{"type":"text","text":"Convenience functions around "},{"type":"codeVoice","code":"CoreData"},{"type":"text","text":" fetching."}],"type":"topic","title":"SafeFetching","url":"\/documentation\/safefetching"},"doc://SafeFetching/documentation/SafeFetching/FetchingIgnored()":{"role":"symbol","url":"\/documentation\/safefetching\/fetchingignored()","fragments":[{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"kind":"identifier","text":"FetchingIgnored"},{"kind":"text","text":"()"}],"kind":"symbol","identifier":"doc:\/\/SafeFetching\/documentation\/SafeFetching\/FetchingIgnored()","title":"FetchingIgnored()","abstract":[{"text":"Attached to a property to make it unavailable when fetching attribute or relationships for the ","type":"text"},{"code":"FetchableManagedObject","type":"codeVoice"},{"text":".","type":"text"}],"type":"topic"}}}