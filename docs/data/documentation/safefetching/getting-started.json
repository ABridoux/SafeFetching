{"abstract":[{"text":"Quick overview to start using SafeFetching and write fetch requests the easy way.","type":"text"}],"kind":"article","sections":[],"metadata":{"title":"Using SafeFetching: Getting Started","roleHeading":"Article","role":"article","modules":[{"name":"SafeFetching"}]},"hierarchy":{"paths":[["doc:\/\/SafeFetching\/documentation\/SafeFetching"]]},"primaryContentSections":[{"kind":"content","content":[{"type":"heading","level":2,"anchor":"Overview","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This article uses the following managed object."}]},{"type":"codeListing","syntax":"swift","code":["@objc(User)","final class User: NSManagedObject {","    @NSManaged var name: String","    @NSManaged var score: Int32","}"]},{"type":"heading","level":3,"anchor":"Conform-to-Fetchable","text":"Conform to Fetchable"},{"type":"paragraph","inlineContent":[{"text":"The first step to use SafeFetching with ","type":"text"},{"code":"User","type":"codeVoice"},{"text":" is to make it conform to ","type":"text"},{"isActive":true,"identifier":"doc:\/\/SafeFetching\/documentation\/SafeFetching\/Fetchable","type":"reference"},{"text":".","type":"text"}]},{"type":"codeListing","syntax":"swift","code":["extension User: Fetchable {","","    static var fetchableMembers: FetchableMembers { fetchableMembers }","","    struct FetchableMembers {","        let name = FetchableMember<User, String>(identifier: \"name\")","        let score = FetchableMember<User, Int32>(identifier: \"score\")","    }","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"It’s also possible to use the "},{"type":"codeVoice","code":"FetchableManagedObject"},{"type":"text","text":" macro directly."}]},{"type":"codeListing","syntax":"swift","code":["@FetchableManagedObject","@objc(User)","final class User: NSManagedObject {","    @NSManaged var name: String","    @NSManaged var score: Int32","}"]},{"type":"aside","name":"Tip","content":[{"inlineContent":[{"text":"When using the macro, it’s possible to extend ","type":"text"},{"type":"codeVoice","code":"User.FetchableMembers"},{"text":" to add attributes or relationships that the macro cannot find in the declarations, such as when the property is defined in a parent class.","type":"text"}],"type":"paragraph"}],"style":"tip"},{"type":"paragraph","inlineContent":[{"text":"To ignore an attribute or a relationship when using the ","type":"text"},{"code":"FetchableManagedObject","type":"codeVoice"},{"text":" macro, annotate it with ","type":"text"},{"code":"@FetchingIgnored","type":"codeVoice"},{"text":". This will effectively not generate a ","type":"text"},{"code":"FetchableMember","type":"codeVoice"},{"text":" for the annotated property.","type":"text"}]},{"type":"heading","level":3,"anchor":"Fetch-User","text":"Fetch User"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Once "},{"type":"codeVoice","code":"User"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Fetchable"},{"type":"text","text":", it gains the static function "},{"type":"reference","isActive":true,"identifier":"doc:\/\/SafeFetching\/documentation\/SafeFetching\/Fetchable\/request()"},{"type":"text","text":" to start building a fetch request. It’s then possible to specify that all "},{"type":"codeVoice","code":"User"},{"type":"text","text":" entries should be fetched or just one, filter them using predicates and so on."}]},{"type":"paragraph","inlineContent":[{"text":"For instance, here is a statement to fetch all users.","type":"text"}]},{"code":["try User.request().all().fetch(in: context) \/\/ [User]"],"type":"codeListing","syntax":"swift"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Where "},{"type":"codeVoice","code":"context"},{"type":"text","text":" is a "},{"type":"codeVoice","code":"NSManagedObjectContext"},{"type":"text","text":"."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"To filter "},{"type":"codeVoice","code":"User"},{"type":"text","text":" with a predicate, add a "},{"type":"codeVoice","code":"where(_:)"},{"type":"text","text":" call after "},{"type":"codeVoice","code":"all()"},{"type":"text","text":"."}]},{"code":["try User.request()","    .all()","    .where { $0.name.hasPrefix(\"Anna\") }","    .fetch(in: context) \/\/ [User]"],"type":"codeListing","syntax":"swift"},{"type":"paragraph","inlineContent":[{"text":"The ","type":"text"},{"code":"where(_:)","type":"codeVoice"},{"text":" expects a predicate built on the provided ","type":"text"},{"code":"User.FetchableMembers","type":"codeVoice"},{"text":" that is then converted to a ","type":"text"},{"code":"NSPredicate","type":"codeVoice"},{"text":" with the appropriate format. The predicate is built using operators overloads or extensions on ","type":"text"},{"identifier":"doc:\/\/SafeFetching\/documentation\/SafeFetching\/FetchableMember","isActive":true,"type":"reference"},{"text":". Writing more complex predicates still feels natural.","type":"text"}]},{"code":["try User.request()","    .all()","    .where { $0.name.hasPrefix(\"Anna\") && $0.score < 10 }","    .fetch(in: context) \/\/ [User]"],"type":"codeListing","syntax":"swift"},{"type":"paragraph","inlineContent":[{"text":"Finally, by importing ","type":"text"},{"type":"codeVoice","code":"SafeFetching"},{"text":" with ","type":"text"},{"type":"codeVoice","code":"@_spi(SafeFetching)"},{"text":", more convenience functions are available such as extensions on collections to make the predicates even closer to Swift syntax, while still generating the proper format for ","type":"text"},{"type":"codeVoice","code":"NSPredicate"},{"text":".","type":"text"}]},{"code":["@_spi(SafeFetching) import SafeFetching","","let scores: [Int32] = [10, 20, 30]","try User.request()","    .all()","    .where { scores.contains($0.score) }","    .fetch(in: context) \/\/ [User]"],"type":"codeListing","syntax":"swift"},{"type":"heading","level":3,"text":"Where to Go Next","anchor":"Where-to-Go-Next"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"Learn more about predicates by reading "},{"identifier":"doc:\/\/SafeFetching\/documentation\/SafeFetching\/build-predicates","isActive":true,"type":"reference"},{"type":"text","text":"."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Learn more about request building by reading ","type":"text"},{"identifier":"doc:\/\/SafeFetching\/documentation\/SafeFetching\/build-requests","isActive":true,"type":"reference"},{"text":".","type":"text"}]}]}]}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/safefetching\/getting-started"]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/SafeFetching\/documentation\/SafeFetching\/getting-started"},"schemaVersion":{"patch":0,"minor":3,"major":0},"references":{"doc://SafeFetching/documentation/SafeFetching":{"type":"topic","identifier":"doc:\/\/SafeFetching\/documentation\/SafeFetching","kind":"symbol","role":"collection","title":"SafeFetching","url":"\/documentation\/safefetching","abstract":[{"text":"Convenience functions around ","type":"text"},{"code":"CoreData","type":"codeVoice"},{"text":" fetching.","type":"text"}]},"doc://SafeFetching/documentation/SafeFetching/Fetchable":{"title":"Fetchable","kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Fetchable"}],"type":"topic","abstract":[{"text":"Implemented by a ","type":"text"},{"code":"NSManagedObject","type":"codeVoice"},{"text":" to offer fetching using SafeFetching API.","type":"text"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Fetchable"}],"url":"\/documentation\/safefetching\/fetchable","identifier":"doc:\/\/SafeFetching\/documentation\/SafeFetching\/Fetchable"},"doc://SafeFetching/documentation/SafeFetching/build-requests":{"abstract":[{"text":"Learn how to build requests with the SafeFetching DSL.","type":"text"}],"kind":"article","identifier":"doc:\/\/SafeFetching\/documentation\/SafeFetching\/build-requests","type":"topic","role":"article","title":"Build Requests","url":"\/documentation\/safefetching\/build-requests"},"doc://SafeFetching/documentation/SafeFetching/Fetchable/request()":{"role":"symbol","abstract":[{"type":"text","text":"Starts building a request."}],"url":"\/documentation\/safefetching\/fetchable\/request()","kind":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"request","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"Builders","preciseIdentifier":"s:12SafeFetching8BuildersO","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"PreRequest","preciseIdentifier":"s:12SafeFetching8BuildersO10PreRequestV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"CreationStep","kind":"typeIdentifier","preciseIdentifier":"s:12SafeFetching12CreationStepO"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":">","kind":"text"}],"type":"topic","identifier":"doc:\/\/SafeFetching\/documentation\/SafeFetching\/Fetchable\/request()","title":"request()"},"doc://SafeFetching/documentation/SafeFetching/FetchableMember":{"title":"FetchableMember","type":"topic","identifier":"doc:\/\/SafeFetching\/documentation\/SafeFetching\/FetchableMember","navigatorTitle":[{"text":"FetchableMember","kind":"identifier"}],"role":"symbol","abstract":[{"text":"Stores types and identifier of an entity and attribute or relationship that can be used for fetching.","type":"text"}],"kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"FetchableMember","kind":"identifier"}],"url":"\/documentation\/safefetching\/fetchablemember"},"doc://SafeFetching/documentation/SafeFetching/build-predicates":{"kind":"article","role":"article","type":"topic","identifier":"doc:\/\/SafeFetching\/documentation\/SafeFetching\/build-predicates","url":"\/documentation\/safefetching\/build-predicates","title":"Build Predicates","abstract":[{"type":"text","text":"Learn how to safely specify predicates when building a request."}]}}}