{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/SafeFetching\/documentation\/SafeFetching\/getting-started"},"kind":"article","abstract":[{"type":"text","text":"Quick overview to start using SafeFetching and write fetch requests the easy way."}],"hierarchy":{"paths":[["doc:\/\/SafeFetching\/documentation\/SafeFetching"]]},"variants":[{"paths":["\/documentation\/safefetching\/getting-started"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"title":"Using SafeFetching: Getting Started","modules":[{"name":"SafeFetching"}],"role":"article","roleHeading":"Article"},"schemaVersion":{"minor":3,"major":0,"patch":0},"primaryContentSections":[{"kind":"content","content":[{"anchor":"Overview","type":"heading","level":2,"text":"Overview"},{"type":"paragraph","inlineContent":[{"text":"This article uses the following managed object.","type":"text"}]},{"syntax":"swift","code":["@objc(User)","final class User: NSManagedObject {","    @NSManaged var name: String","    @NSManaged var score: Int32","}"],"type":"codeListing"},{"anchor":"Conform-to-Fetchable","type":"heading","level":3,"text":"Conform to Fetchable"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The first step to use SafeFetching with "},{"type":"codeVoice","code":"User"},{"type":"text","text":" is to make it conform to "},{"type":"reference","identifier":"doc:\/\/SafeFetching\/documentation\/SafeFetching\/Fetchable","isActive":true},{"type":"text","text":"."}]},{"syntax":"swift","code":["extension User: Fetchable {","","    static var fetchableMembers: FetchableMembers { fetchableMembers }","","    struct FetchableMembers {","        let name = FetchableMember<User, String>(identifier: \"name\")","        let score = FetchableMember<User, Int32>(identifier: \"score\")","    }","}"],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"type":"text","text":"It’s also possible to use the "},{"code":"FetchableManagedObject","type":"codeVoice"},{"type":"text","text":" macro directly."}]},{"syntax":"swift","code":["@FetchableManagedObject","@objc(User)","final class User: NSManagedObject {","    @NSManaged var name: String","    @NSManaged var score: Int32","}"],"type":"codeListing"},{"name":"Tip","content":[{"inlineContent":[{"text":"When using the macro, it’s possible to extend ","type":"text"},{"type":"codeVoice","code":"User.FetchableMembers"},{"text":" to add attributes or relationships that the macro cannot find in the declarations, such as when the property is defined in a parent class.","type":"text"}],"type":"paragraph"}],"type":"aside","style":"tip"},{"type":"paragraph","inlineContent":[{"text":"To ignore an attribute or a relationship when using the ","type":"text"},{"code":"FetchableManagedObject","type":"codeVoice"},{"text":" macro, annotate it with ","type":"text"},{"code":"@FetchingIgnored","type":"codeVoice"},{"text":". This will effectively not generate a ","type":"text"},{"code":"FetchableMember","type":"codeVoice"},{"text":" for the annotated property.","type":"text"}]},{"anchor":"Fetch-User","type":"heading","level":3,"text":"Fetch User"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Once "},{"type":"codeVoice","code":"User"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Fetchable"},{"type":"text","text":", it gains the static function "},{"type":"reference","isActive":true,"identifier":"doc:\/\/SafeFetching\/documentation\/SafeFetching\/Fetchable\/request()"},{"type":"text","text":" to start building a fetch request. It’s then possible to specify that all "},{"type":"codeVoice","code":"User"},{"type":"text","text":" entries should be fetched or just one, filter them using predicates and so on."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"For instance, here is a statement to fetch all users."}]},{"syntax":"swift","code":["try User.request().all().fetch(in: context) \/\/ [User]"],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Where "},{"type":"codeVoice","code":"context"},{"type":"text","text":" is a "},{"type":"codeVoice","code":"NSManagedObjectContext"},{"type":"text","text":"."}]},{"type":"paragraph","inlineContent":[{"text":"To filter the ","type":"text"},{"type":"codeVoice","code":"User"},{"text":" with a predicate, add a ","type":"text"},{"type":"codeVoice","code":"where(_:)"},{"text":" call after ","type":"text"},{"type":"codeVoice","code":"all()"},{"text":".","type":"text"}]},{"syntax":"swift","code":["try User.request()","    .all()","    .where { $0.name.hasPrefix(\"Anna\") }","    .fetch(in: context) \/\/ [User]"],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"text":"The ","type":"text"},{"code":"where(_:)","type":"codeVoice"},{"text":" takes expects a predicate built on the provided ","type":"text"},{"code":"User.FetchableMembers","type":"codeVoice"},{"text":" that is then converted to a ","type":"text"},{"type":"codeVoice","code":"NSPredicate"},{"type":"text","text":" with the appropriate format. The predicate is built using operators overloads or extensions on "},{"type":"codeVoice","code":"FetchableMember"},{"type":"text","text":". Write more complex predicates still feels natural."}]},{"syntax":"swift","type":"codeListing","code":["try User.request()","    .all()","    .where { $0.name.hasPrefix(\"Anna\") && $0.score < 10 }","    .fetch(in: context) \/\/ [User]"]},{"inlineContent":[{"type":"text","text":"Finally, by importing "},{"type":"codeVoice","code":"SafeFetching"},{"type":"text","text":" with "},{"type":"codeVoice","code":"@_spi(SafeFetching)"},{"type":"text","text":", more convenience functions are available such as extensions on collections to make the predicates even closer to Swift syntax, while still generating the proper format for "},{"type":"codeVoice","code":"NSPredicate"},{"type":"text","text":"."}],"type":"paragraph"},{"syntax":"swift","type":"codeListing","code":["@_spi(SafeFetching) import SafeFetching","","let scores: [Int32] = [10, 20, 30]","try User.request()","    .all()","    .where { scores.contains($0.score) }","    .fetch(in: context) \/\/ [User]"]},{"text":"What’s Next","type":"heading","anchor":"Whats-Next","level":3},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Learn more about predicates by reading ","type":"text"},{"identifier":"doc:\/\/SafeFetching\/documentation\/SafeFetching\/build-predicates","isActive":true,"type":"reference"},{"text":".","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Learn more about request building by reading "},{"identifier":"doc:\/\/SafeFetching\/documentation\/SafeFetching\/build-requests","type":"reference","isActive":true},{"text":".","type":"text"}]}]}]}]}],"sections":[],"references":{"doc://SafeFetching/documentation/SafeFetching/Fetchable/request()":{"abstract":[{"text":"Starts building a request.","type":"text"}],"identifier":"doc:\/\/SafeFetching\/documentation\/SafeFetching\/Fetchable\/request()","kind":"symbol","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"request","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"Builders","kind":"typeIdentifier","preciseIdentifier":"s:12SafeFetching8BuildersO"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:12SafeFetching8BuildersO10PreRequestV","text":"PreRequest"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"preciseIdentifier":"s:12SafeFetching12CreationStepO","kind":"typeIdentifier","text":"CreationStep"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">"}],"type":"topic","role":"symbol","url":"\/documentation\/safefetching\/fetchable\/request()","title":"request()"},"doc://SafeFetching/documentation/SafeFetching":{"abstract":[{"type":"text","text":"Convenience functions around "},{"type":"codeVoice","code":"CoreData"},{"type":"text","text":" fetching."}],"type":"topic","kind":"symbol","url":"\/documentation\/safefetching","role":"collection","identifier":"doc:\/\/SafeFetching\/documentation\/SafeFetching","title":"SafeFetching"},"doc://SafeFetching/documentation/SafeFetching/build-predicates":{"type":"topic","url":"\/documentation\/safefetching\/build-predicates","identifier":"doc:\/\/SafeFetching\/documentation\/SafeFetching\/build-predicates","role":"article","kind":"article","title":"Build Predicates","abstract":[{"text":"Learn how to specify safe predicates safely when building a request.","type":"text"}]},"doc://SafeFetching/documentation/SafeFetching/Fetchable":{"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Fetchable"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Fetchable"}],"identifier":"doc:\/\/SafeFetching\/documentation\/SafeFetching\/Fetchable","kind":"symbol","type":"topic","abstract":[{"type":"text","text":"Implemented by a "},{"type":"codeVoice","code":"NSManagedObject"},{"type":"text","text":" to offer fetching using SafeFetching API."}],"url":"\/documentation\/safefetching\/fetchable","title":"Fetchable"},"doc://SafeFetching/documentation/SafeFetching/build-requests":{"kind":"article","abstract":[{"text":"Learn how to build requests with the SafeFetching DSL.","type":"text"}],"identifier":"doc:\/\/SafeFetching\/documentation\/SafeFetching\/build-requests","type":"topic","title":"Build Requests","url":"\/documentation\/safefetching\/build-requests","role":"article"}}}