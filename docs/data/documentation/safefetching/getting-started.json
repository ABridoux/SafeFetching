{"metadata":{"roleHeading":"Article","role":"article","title":"Using SafeFetching: Getting Started","modules":[{"name":"SafeFetching"}]},"sections":[],"abstract":[{"text":"Quick overview to start using SafeFetching and write fetch requests the easy way.","type":"text"}],"hierarchy":{"paths":[["doc:\/\/SafeFetching\/documentation\/SafeFetching"]]},"identifier":{"url":"doc:\/\/SafeFetching\/documentation\/SafeFetching\/getting-started","interfaceLanguage":"swift"},"schemaVersion":{"minor":3,"patch":0,"major":0},"primaryContentSections":[{"kind":"content","content":[{"type":"heading","level":2,"text":"Overview","anchor":"Overview"},{"type":"paragraph","inlineContent":[{"text":"This article uses the following managed object.","type":"text"}]},{"type":"codeListing","syntax":"swift","code":["@objc(User)","final class User: NSManagedObject {","    @NSManaged var name: String","    @NSManaged var score: Int32","}"]},{"type":"heading","level":3,"text":"Conform to Fetchable","anchor":"Conform-to-Fetchable"},{"type":"paragraph","inlineContent":[{"text":"The first step to use SafeFetching with ","type":"text"},{"code":"User","type":"codeVoice"},{"text":" is to make it conform to ","type":"text"},{"isActive":true,"identifier":"doc:\/\/SafeFetching\/documentation\/SafeFetching\/Fetchable","type":"reference"},{"text":".","type":"text"}]},{"type":"codeListing","syntax":"swift","code":["extension User: Fetchable {","","    static var fetchableMembers: FetchableMembers { fetchableMembers }","","    struct FetchableMembers {","        let name = FetchableMember<User, String>(identifier: \"name\")","        let score = FetchableMember<User, Int32>(identifier: \"score\")","    }","}"]},{"type":"paragraph","inlineContent":[{"text":"It’s also possible to use the ","type":"text"},{"code":"FetchableManagedObject","type":"codeVoice"},{"text":" macro directly.","type":"text"}]},{"type":"codeListing","syntax":"swift","code":["@FetchableManagedObject","@objc(User)","final class User: NSManagedObject {","    @NSManaged var name: String","    @NSManaged var score: Int32","}"]},{"type":"aside","name":"Tip","style":"tip","content":[{"type":"paragraph","inlineContent":[{"text":"When using the macro, it’s possible to extend ","type":"text"},{"type":"codeVoice","code":"User.FetchableMembers"},{"text":" to add attributes or relationships that the macro cannot find in the declarations, such as when the property is defined in a parent class.","type":"text"}]}]},{"type":"paragraph","inlineContent":[{"text":"To ignore an attribute or a relationship when using the ","type":"text"},{"type":"codeVoice","code":"FetchableManagedObject"},{"text":" macro, annotate it with ","type":"text"},{"type":"codeVoice","code":"@FetchingIgnored"},{"text":". This will effectively not generate a ","type":"text"},{"type":"codeVoice","code":"FetchableMember"},{"text":" for the annotated property.","type":"text"}]},{"type":"heading","level":3,"text":"Fetch User","anchor":"Fetch-User"},{"type":"paragraph","inlineContent":[{"text":"Once ","type":"text"},{"code":"User","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Fetchable","type":"codeVoice"},{"text":", it gains the static function ","type":"text"},{"isActive":true,"identifier":"doc:\/\/SafeFetching\/documentation\/SafeFetching\/Fetchable\/request()","type":"reference"},{"text":" to start building a fetch request. It’s then possible to specify that all ","type":"text"},{"code":"User","type":"codeVoice"},{"text":" entries should be fetched or just one, filter them using predicates and so on.","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"For instance, here is a statement to fetch all users.","type":"text"}]},{"type":"codeListing","syntax":"swift","code":["try User.request().all().fetch(in: context) \/\/ [User]"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Where "},{"code":"context","type":"codeVoice"},{"type":"text","text":" is a "},{"code":"NSManagedObjectContext","type":"codeVoice"},{"type":"text","text":"."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"To filter "},{"code":"User","type":"codeVoice"},{"type":"text","text":" with a predicate, add a "},{"code":"where(_:)","type":"codeVoice"},{"type":"text","text":" call after "},{"code":"all()","type":"codeVoice"},{"type":"text","text":"."}]},{"type":"codeListing","syntax":"swift","code":["try User.request()","    .all()","    .where { $0.name.hasPrefix(\"Anna\") }","    .fetch(in: context) \/\/ [User]"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"where(_:)"},{"type":"text","text":" expects a predicate built on the provided "},{"type":"codeVoice","code":"User.FetchableMembers"},{"type":"text","text":" that is then converted to a "},{"type":"codeVoice","code":"NSPredicate"},{"type":"text","text":" with the appropriate format. The predicate is built using operators overloads or extensions on "},{"type":"reference","isActive":true,"identifier":"doc:\/\/SafeFetching\/documentation\/SafeFetching\/FetchableMember"},{"type":"text","text":". Writing more complex predicates still feels natural."}]},{"type":"codeListing","syntax":"swift","code":["try User.request()","    .all()","    .where { $0.name.hasPrefix(\"Anna\") && $0.score < 10 }","    .fetch(in: context) \/\/ [User]"]},{"type":"paragraph","inlineContent":[{"text":"Finally, by importing ","type":"text"},{"code":"SafeFetching","type":"codeVoice"},{"text":" with ","type":"text"},{"code":"@_spi(SafeFetching)","type":"codeVoice"},{"text":", more convenience functions are available such as extensions on collections to make the predicates even closer to Swift syntax, while still generating the proper format for ","type":"text"},{"code":"NSPredicate","type":"codeVoice"},{"text":".","type":"text"}]},{"type":"codeListing","syntax":"swift","code":["@_spi(SafeFetching) import SafeFetching","","let scores: [Int32] = [10, 20, 30]","try User.request()","    .all()","    .where { scores.contains($0.score) }","    .fetch(in: context) \/\/ [User]"]},{"type":"heading","level":3,"text":"What’s Next","anchor":"Whats-Next"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"Learn more about predicates by reading "},{"type":"reference","isActive":true,"identifier":"doc:\/\/SafeFetching\/documentation\/SafeFetching\/build-predicates"},{"type":"text","text":"."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Learn more about request building by reading "},{"identifier":"doc:\/\/SafeFetching\/documentation\/SafeFetching\/build-requests","isActive":true,"type":"reference"},{"type":"text","text":"."}],"type":"paragraph"}]}]}]}],"kind":"article","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/safefetching\/getting-started"]}],"references":{"doc://SafeFetching/documentation/SafeFetching":{"type":"topic","abstract":[{"text":"Convenience functions around ","type":"text"},{"code":"CoreData","type":"codeVoice"},{"text":" fetching.","type":"text"}],"kind":"symbol","title":"SafeFetching","url":"\/documentation\/safefetching","identifier":"doc:\/\/SafeFetching\/documentation\/SafeFetching","role":"collection"},"doc://SafeFetching/documentation/SafeFetching/Fetchable/request()":{"title":"request()","identifier":"doc:\/\/SafeFetching\/documentation\/SafeFetching\/Fetchable\/request()","kind":"symbol","abstract":[{"type":"text","text":"Starts building a request."}],"url":"\/documentation\/safefetching\/fetchable\/request()","role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"request"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:12SafeFetching8BuildersO","text":"Builders"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:12SafeFetching8BuildersO10PreRequestV","text":"PreRequest"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"kind":"typeIdentifier","preciseIdentifier":"s:12SafeFetching12CreationStepO","text":"CreationStep"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">"}]},"doc://SafeFetching/documentation/SafeFetching/FetchableMember":{"navigatorTitle":[{"kind":"identifier","text":"FetchableMember"}],"url":"\/documentation\/safefetching\/fetchablemember","role":"symbol","type":"topic","title":"FetchableMember","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"FetchableMember"}],"identifier":"doc:\/\/SafeFetching\/documentation\/SafeFetching\/FetchableMember","kind":"symbol","abstract":[{"type":"text","text":"Stores types and identifier of an entity and attribute or relationship that can be used for fetching."}]},"doc://SafeFetching/documentation/SafeFetching/build-predicates":{"title":"Build Predicates","url":"\/documentation\/safefetching\/build-predicates","abstract":[{"text":"Learn how to specify safe predicates safely when building a request.","type":"text"}],"role":"article","type":"topic","kind":"article","identifier":"doc:\/\/SafeFetching\/documentation\/SafeFetching\/build-predicates"},"doc://SafeFetching/documentation/SafeFetching/build-requests":{"identifier":"doc:\/\/SafeFetching\/documentation\/SafeFetching\/build-requests","url":"\/documentation\/safefetching\/build-requests","abstract":[{"text":"Learn how to build requests with the SafeFetching DSL.","type":"text"}],"title":"Build Requests","role":"article","kind":"article","type":"topic"},"doc://SafeFetching/documentation/SafeFetching/Fetchable":{"role":"symbol","abstract":[{"type":"text","text":"Implemented by a "},{"code":"NSManagedObject","type":"codeVoice"},{"type":"text","text":" to offer fetching using SafeFetching API."}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Fetchable"}],"navigatorTitle":[{"kind":"identifier","text":"Fetchable"}],"identifier":"doc:\/\/SafeFetching\/documentation\/SafeFetching\/Fetchable","title":"Fetchable","type":"topic","url":"\/documentation\/safefetching\/fetchable","kind":"symbol"}}}