{"primaryContentSections":[{"kind":"content","content":[{"anchor":"overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Examples in the article refer to this entity."}]},{"type":"codeListing","syntax":"swift","code":["final class StubEntity: NSManagedObject {","","    @NSManaged var score = 0.0","    @NSManaged  var name: String? = \"\"","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"When building a request, the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/SafeFetching\/documentation\/SafeFetching\/Builders\/Request\/where(_:)-6r3wg"},{"type":"text","text":" operation allows to specify a predicate. For a demonstration purpose in this article, predicates are specified after their implicit declaration."}]},{"type":"codeListing","syntax":"swift","code":["let predicate: Builders.Predicate<StubEntity>","predicate = \\.name == \"Toto\""]},{"anchor":"Comparison","level":2,"type":"heading","text":"Comparison"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Comparison operators can be used with key paths to specify a property in the entity that should be compared to a test value."}]},{"anchor":"Equality","level":6,"type":"heading","text":"Equality"},{"type":"codeListing","syntax":"swift","code":["predicate = \\.name == \"Toto\""]},{"anchor":"Greater","level":6,"type":"heading","text":"Greater"},{"type":"codeListing","syntax":"swift","code":["predicate = \\.score > 20"]},{"anchor":"Greater-than","level":6,"type":"heading","text":"Greater than"},{"type":"codeListing","syntax":"swift","code":["predicate = \\.score >= 20"]},{"anchor":"Less","level":6,"type":"heading","text":"Less"},{"type":"codeListing","syntax":"swift","code":["predicate = \\.score < 20"]},{"anchor":"Less-than","level":6,"type":"heading","text":"Less than"},{"type":"codeListing","syntax":"swift","code":["predicate = \\.score <= 20"]},{"anchor":"Boolean","level":5,"type":"heading","text":"Boolean"},{"type":"codeListing","syntax":"swift","code":["predicate = \\.isAdmin == true"]},{"type":"codeListing","syntax":"swift","code":["predicate = !\\.isAdmin"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"where(_:)"},{"type":"text","text":" function has convenient variations to take a single boolean like "},{"type":"reference","isActive":true,"identifier":"doc:\/\/SafeFetching\/documentation\/SafeFetching\/Builders\/Request\/where(_:)-5ar9o"},{"type":"text","text":"."}]},{"type":"codeListing","syntax":"swift","code":[".where(\\.isAdmin)"]},{"anchor":"Advanced-operations","level":2,"type":"heading","text":"Advanced operations"},{"type":"paragraph","inlineContent":[{"type":"text","text":"It’s possible to use the advanced operators offered by "},{"type":"codeVoice","code":"NSPredicate"},{"type":"text","text":" safely by specifying a key path followed by the junction operator "},{"type":"codeVoice","code":"*"},{"type":"text","text":" then the custom operator."}]},{"anchor":"Has-prefix-(string-property)","level":6,"type":"heading","text":"Has prefix (string property)"},{"type":"codeListing","syntax":"swift","code":["predicate = \\.name * .hasPrefix(\"Do\")"]},{"anchor":"Contains-(string-property)","level":6,"type":"heading","text":"Contains (string property)"},{"type":"codeListing","syntax":"swift","code":["predicate = \\.name * .contains(\"Do\")"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Other examples on a numeric property"}]},{"anchor":"Is-in-(numeric-property)","level":6,"type":"heading","text":"Is in (numeric property)"},{"type":"codeListing","syntax":"swift","code":["predicate = \\.score * .isIn(10...20)"]},{"anchor":"Matches-a-regular-expression-(string-property)","level":6,"type":"heading","text":"Matches a regular expression (string property)"},{"type":"codeListing","syntax":"swift","code":["predicate = \\.name * .matches(\"[A-Za-z]{3}\")"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The advanced operators can be found with "},{"type":"reference","isActive":true,"identifier":"doc:\/\/SafeFetching\/documentation\/SafeFetching\/Builders\/KeyPathPredicateRightValue"}]},{"anchor":"Compound","level":2,"type":"heading","text":"Compound"},{"type":"paragraph","inlineContent":[{"type":"text","text":"It’s possible to use the and "},{"type":"codeVoice","code":"&&"},{"type":"text","text":" and or "},{"type":"codeVoice","code":"||"},{"type":"text","text":" operators."}]},{"anchor":"And","level":5,"type":"heading","text":"And"},{"type":"codeListing","syntax":"swift","code":["predicate = \\.name == \"Bruce\"","    && \\.score * .isIn(20..<40)"]},{"anchor":"Or","level":5,"type":"heading","text":"Or"},{"type":"codeListing","syntax":"swift","code":["predicate = \\.name == \"Bruce\"","    || \\.score * .isIn(20..<40)"]},{"anchor":"Single-booleans","level":5,"type":"heading","text":"Single booleans"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Compound predicates work with single booleans."}]},{"type":"codeListing","syntax":"swift","code":["predicate = \\.isAdmin && \\.score * .isIn(20..<40)"]},{"type":"codeListing","syntax":"swift","code":["predicate = !\\.isAdmin || \\.score * .isIn(20..<40)"]},{"anchor":"And-And","level":3,"type":"heading","text":"And - And"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Composing predicates with compound predicates is done naturally"}]},{"type":"codeListing","syntax":"swift","code":["predicate = \\.score * .isIn(20..<40)","    && \\.name * .hasPrefix(\"Do\")","    && \\.name * .hasSuffix(\"remi\")"]},{"anchor":"And\/Or-precedence","level":3,"type":"heading","text":"And\/Or precedence"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Since "},{"type":"codeVoice","code":"&&"},{"type":"text","text":" precedes "},{"type":"codeVoice","code":"||"},{"type":"text","text":" in boolean expressions, it’s possible to enclose a predicate with brackets to prevent this behavior."}]},{"type":"codeListing","syntax":"swift","code":["predicate = \\.score * .isIn(20..<40)","    && (\\.name * .hasPrefix(\"Do\") || \\.name * .hasSuffix(\"remi\"))"]},{"anchor":"RawRepresentable","level":2,"type":"heading","text":"RawRepresentable"},{"type":"paragraph","inlineContent":[{"type":"text","text":"When a stored value is the "},{"type":"codeVoice","code":"rawValue"},{"type":"text","text":" of a "},{"type":"codeVoice","code":"RawRepresentable"},{"type":"text","text":" type, it’s possible to define a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/SafeFetching\/documentation\/SafeFetching\/StringKeyPath"},{"type":"text","text":" to be used in a predicate."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"For instance with the enum "},{"type":"codeVoice","code":"Color"},{"type":"text","text":" and a "},{"type":"codeVoice","code":"color: Color?"},{"type":"text","text":" property and a static "},{"type":"codeVoice","code":"StringKeyPath.color"},{"type":"text","text":" value."}]},{"type":"codeListing","syntax":"swift","code":["enum Color: String {","    case red, blue, green","}"]},{"anchor":"Comparison-predicates","level":3,"type":"heading","text":"Comparison predicates"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The same comparison predicates are available:"}]},{"type":"codeListing","syntax":"swift","code":["predicate = .color == .red"]},{"type":"codeListing","syntax":"swift","code":["predicate = .color != .red"]},{"anchor":"Advanced-predicates","level":3,"type":"heading","text":"Advanced predicates"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"isIn"},{"type":"text","text":" operator is also available"}]},{"type":"codeListing","syntax":"swift","code":["predicate = .color * .isIn(.red, .blue)"]},{"type":"codeListing","syntax":"swift","code":["predicate = .color * .isNotIn([.red, .blue])"]},{"anchor":"OptionSet","level":3,"type":"heading","text":"OptionSet"},{"type":"paragraph","inlineContent":[{"type":"text","text":"With an option set, it’s advised to rather use the "},{"type":"codeVoice","code":"intersects"},{"type":"text","text":" predicates."},{"type":"text","text":" "},{"type":"text","text":"With the colors now as an option set:"}]},{"type":"codeListing","syntax":"swift","code":["struct Colors: OptionSet {","    let rawValue: Int","","    static let red = StubOptionSet(rawValue: 1 << 0)","    static let blue = StubOptionSet(rawValue: 1 << 1)","    static let green = StubOptionSet(rawValue: 1 << 2)","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The predicate is specified as follow:"}]},{"type":"codeListing","syntax":"swift","code":["predicate = .color * .intersects([.red, .blue])"]},{"type":"codeListing","syntax":"swift","code":["predicate = .color * .doesNoIntersect([.red, .blue])"]},{"anchor":"Comparing-option-set-values","level":3,"type":"heading","text":"Comparing option set values"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Note that"}]},{"type":"codeListing","syntax":"swift","code":["predicate = .color * .intersects(.blue)"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"is only the same as"}]},{"type":"codeListing","syntax":"swift","code":["predicate = .color == .blue"]},{"type":"paragraph","inlineContent":[{"type":"emphasis","inlineContent":[{"type":"text","text":"when the stored "},{"type":"codeVoice","code":"color"},{"type":"text","text":" is a single option"}]},{"type":"text","text":"."}]}]}],"schemaVersion":{"major":0,"minor":2,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/safefetching\/build-predicates"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/SafeFetching\/documentation\/SafeFetching\/build-predicates","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Learn how to specify safe predicates safely when building a request."}],"kind":"article","metadata":{"roleHeading":"Article","title":"Build predicates","role":"article","modules":[{"name":"SafeFetching"}]},"hierarchy":{"paths":[["doc:\/\/SafeFetching\/documentation\/SafeFetching"]]},"seeAlsoSections":[{"title":"Build predicates","identifiers":["doc:\/\/SafeFetching\/documentation\/SafeFetching\/Builders\/Predicate","doc:\/\/SafeFetching\/documentation\/SafeFetching\/DatabaseValue","doc:\/\/SafeFetching\/documentation\/SafeFetching\/DatabaseValueIdentification","doc:\/\/SafeFetching\/documentation\/SafeFetching\/DatabaseTestValue"],"generated":true}],"references":{"doc://SafeFetching/documentation/SafeFetching/DatabaseValueIdentification":{"role":"symbol","title":"DatabaseValueIdentification","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"DatabaseValueIdentification"}],"abstract":[{"type":"text","text":"Stub type with internal init to ensure no conformance to "},{"type":"reference","isActive":true,"identifier":"doc:\/\/SafeFetching\/documentation\/SafeFetching\/DatabaseValue"},{"type":"text","text":" can be added outside of the package"}],"identifier":"doc:\/\/SafeFetching\/documentation\/SafeFetching\/DatabaseValueIdentification","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"DatabaseValueIdentification"}],"url":"\/documentation\/safefetching\/databasevalueidentification"},"doc://SafeFetching/documentation/SafeFetching/DatabaseValue":{"role":"symbol","title":"DatabaseValue","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"DatabaseValue"}],"abstract":[{"type":"text","text":"A type that can be used for an attribute in a predicate when fetching a CoreData store"}],"identifier":"doc:\/\/SafeFetching\/documentation\/SafeFetching\/DatabaseValue","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"DatabaseValue"}],"url":"\/documentation\/safefetching\/databasevalue"},"doc://SafeFetching/documentation/SafeFetching/DatabaseTestValue":{"role":"symbol","title":"DatabaseTestValue","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"DatabaseTestValue"}],"abstract":[{"type":"text","text":"A type that can be used in a predicate as a test value"}],"identifier":"doc:\/\/SafeFetching\/documentation\/SafeFetching\/DatabaseTestValue","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"DatabaseTestValue"}],"url":"\/documentation\/safefetching\/databasetestvalue"},"doc://SafeFetching/documentation/SafeFetching":{"role":"collection","title":"SafeFetching","abstract":[{"type":"text","text":"Convenience functions around "},{"type":"codeVoice","code":"CoreData"},{"type":"text","text":" fetching."}],"identifier":"doc:\/\/SafeFetching\/documentation\/SafeFetching","kind":"symbol","type":"topic","url":"\/documentation\/safefetching"},"doc://SafeFetching/documentation/SafeFetching/Builders/KeyPathPredicateRightValue":{"role":"symbol","title":"Builders.KeyPathPredicateRightValue","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"KeyPathPredicateRightValue"}],"abstract":[{"type":"text","text":"An operator and its right operand for a predicate, with no key path."}],"identifier":"doc:\/\/SafeFetching\/documentation\/SafeFetching\/Builders\/KeyPathPredicateRightValue","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"KeyPathPredicateRightValue"}],"url":"\/documentation\/safefetching\/builders\/keypathpredicaterightvalue"},"doc://SafeFetching/documentation/SafeFetching/Builders/Predicate":{"role":"symbol","title":"Builders.Predicate","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Predicate"}],"abstract":[],"identifier":"doc:\/\/SafeFetching\/documentation\/SafeFetching\/Builders\/Predicate","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Predicate"}],"url":"\/documentation\/safefetching\/builders\/predicate"},"doc://SafeFetching/documentation/SafeFetching/Builders/Request/where(_:)-5ar9o":{"conformance":{"constraints":[{"type":"codeVoice","code":"Entity"},{"type":"text","text":" inherits "},{"type":"codeVoice","code":"NSManagedObject"},{"type":"text","text":", "},{"type":"codeVoice","code":"Step"},{"type":"text","text":" is "},{"type":"codeVoice","code":"TargetStep"},{"type":"text","text":", and "},{"type":"codeVoice","code":"Output"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"FetchResult"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","title":"where(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"`where`"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"KeyPath","preciseIdentifier":"s:s7KeyPathC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Entity"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"Builders","preciseIdentifier":"s:12SafeFetching8BuildersO"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Request","preciseIdentifier":"s:12SafeFetching8BuildersO7RequestV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Entity"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"PredicateStep","preciseIdentifier":"s:12SafeFetching13PredicateStepO"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Pass a boolean key path"}],"identifier":"doc:\/\/SafeFetching\/documentation\/SafeFetching\/Builders\/Request\/where(_:)-5ar9o","kind":"symbol","type":"topic","url":"\/documentation\/safefetching\/builders\/request\/where(_:)-5ar9o"},"doc://SafeFetching/documentation/SafeFetching/StringKeyPath":{"role":"symbol","title":"StringKeyPath","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"StringKeyPath"}],"abstract":[{"type":"text","text":"Wrapper around a string key for a property that is not Objc but computed with primitive value"}],"identifier":"doc:\/\/SafeFetching\/documentation\/SafeFetching\/StringKeyPath","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"StringKeyPath"}],"url":"\/documentation\/safefetching\/stringkeypath"},"doc://SafeFetching/documentation/SafeFetching/Builders/Request/where(_:)-6r3wg":{"conformance":{"constraints":[{"type":"codeVoice","code":"Entity"},{"type":"text","text":" inherits "},{"type":"codeVoice","code":"NSManagedObject"},{"type":"text","text":", "},{"type":"codeVoice","code":"Step"},{"type":"text","text":" is "},{"type":"codeVoice","code":"TargetStep"},{"type":"text","text":", and "},{"type":"codeVoice","code":"Output"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"FetchResult"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","title":"where(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"`where`"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Builders","preciseIdentifier":"s:12SafeFetching8BuildersO"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Predicate","preciseIdentifier":"s:12SafeFetching8BuildersO9PredicateC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Entity"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"Builders","preciseIdentifier":"s:12SafeFetching8BuildersO"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Request","preciseIdentifier":"s:12SafeFetching8BuildersO7RequestV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Entity"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"PredicateStep","preciseIdentifier":"s:12SafeFetching13PredicateStepO"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Pass a predicate for the request"}],"identifier":"doc:\/\/SafeFetching\/documentation\/SafeFetching\/Builders\/Request\/where(_:)-6r3wg","kind":"symbol","type":"topic","url":"\/documentation\/safefetching\/builders\/request\/where(_:)-6r3wg"}}}